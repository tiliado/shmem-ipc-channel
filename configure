#!/usr/bin/env python3
import buildconfig as bld

name, version = bld.project("shmchannel", "0.0.1")

bld.arg("python", "python3.6", "Target Python version.")
bld.arg("prefix", "/usr/local", "System installation prefix.")
bld.arg("libdir", "$(PREFIX)/lib", "System installation library path.")
bld.arg("datadir", "$(PREFIX)/share", "System data path.")
bld.arg("docdir", "$(DATADIR)/doc", "System documentation path.")
bld.arg("prjdocdir", "$(DOCDIR)/$(PROJECT)", "System documentation path for this project.")
bld.arg("devhelpdir", "$(DATADIR)/devhelp/books", "System Devhelp books path.")
bld.arg("includedir", "$(PREFIX)/include", "System installation include path.")
bld.arg("vapidir", "$(DATADIR)/vala/vapi", "System data path for Vala API (*.vapi) files.")
bld.arg("girdir", "$(DATADIR)/gir-1.0", "System data path for GIR XML (*.gir) files.")
bld.arg("typelibdir", "$(LIBDIR)/girepository-1.0", "System installation path for GI typelib (*.typelib) files.")
python_mod = bld.arg("python-module", True, "Whether to build Python module (cffi required).")
nodejs_mod = bld.arg("nodejs-module", True, "Whether to build NodeJS module (node-gyp required).")

bld.var("CC ?= gcc")
bld.var("OUT := build")
bld.var("TARGET_GLIB := %s", bld.pkg_version("glib-2.0", 2))
bld.var("GYP_INCLUDE_DIRS := %s", ", ".join(('"%s"' % s)
        for s in ([".."] + bld.extract_include_dirs(bld.get_pkg("glib-2.0")[0]))))

bld.cflags("-g -O3 -I$(OUT)")
bld.ldflags("-L$(OUT)")
bld.valaflags("-g --vapidir=$(OUT)")

bld.build("build-lib")
bld.install("lib")
if python_mod():
    bld.build("python-shmchannel")
    bld.install("python-shmchannel")
if nodejs_mod():
    bld.build("nodejs-shmchannel")
    bld.install("nodejs-shmchannel")

bld.finish()

